-module(euler).
-export([euler1/0,euler2/0,euler3/0,is_prime/1]).


% Euler #1
% Answer: 233168
%
% If we list all the natural numbers below 10 that are multiples of 3 or 5,
% we get 3, 5, 6 and 9. The sum of these multiples is 23.
%
% Find the sum of all the multiples of 3 or 5 below 1000.
e1acc(N, MAX, ACC) when N >= MAX -> ACC;
e1acc(N, MAX, ACC) when (N rem 3 == 0) or (N rem 5 == 0) ->
    e1acc(N + 1, MAX, ACC + N);
e1acc(N, MAX, ACC) -> e1acc(N + 1, MAX, ACC).

euler1() -> e1acc(1, 1000, 0).


% Euler #2
% Answer: 4613732
%
% Each new term in the Fibonacci sequence is generated by adding the previous
% two terms. By starting with 1 and 2, the first 10 terms will be:
%
% 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
%
% Find the sum of all the even-valued terms in the sequence which do not
% exceed four million.

e2_next_acc(ACC, C) when C rem 2 == 0 -> ACC + C;
e2_next_acc(ACC, _) -> ACC.

e2acc(_, B, ACC) when B > 4000000 -> ACC;
e2acc(A, B, ACC) ->
    C = A + B,
    e2acc(B, C, e2_next_acc(ACC, C)).

euler2() -> e2acc(1, 2, 2).


% Euler #3
% Answer: 6857
%
% The prime factors of 13195 are 5, 7, 13 and 29.
%
% What is the largest prime factor of the number 600851475143 ?

ceiling(X) ->
    T = erlang:trunc(X),
    case (X - T) of
        Neg when Neg < 0 -> T;
        Pos when Pos > 0 -> T + 1;
        _ -> T
    end.

is_prime_search(1, _) -> true;
is_prime_search(N, PP) when PP rem N == 0 -> false;
is_prime_search(N, PP) -> is_prime_search(N - 1, PP).

is_prime(PP) -> is_prime_search(ceiling(math:sqrt(PP)), PP).

e3search(0, _) -> {error, boom};
e3search(N, Target) when Target rem N == 0 ->
    case is_prime(N) of
        true -> N;
        _ -> e3search(N - 1, Target)
    end;
e3search(N, Target) -> e3search(N - 1, Target).

euler3() -> e3search(ceiling(math:sqrt(600851475143)), 600851475143).
