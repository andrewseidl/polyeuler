(* Project Euler in OCaml
 * John Evans <john@jpevans.com>
 *)

(* Euler #1
 * Answer: 233168
 *
 * If we list all the natural numbers below 10 that are multiples of 3 or 5,
 * we get 3, 5, 6 and 9. The sum of these multiples is 23.
 *
 * Find the sum of all the multiples of 3 or 5 below 1000.
 *)

let rec range a b =
    if a > b then []
    else a :: range (a+1) b
    ;;

let sum_list =
    List.fold_left ( + ) 0
    ;;

let divisible_by_3_or_5 n = 
    (n mod 3 == 0) || (n mod 5 == 0)
    ;;

let euler1 =
    sum_list (List.filter divisible_by_3_or_5 (range 3 999))
    ;;


(*
 * Euler #2
 * Answer: 4613732
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * Find the sum of all the even-valued terms in the sequence which do not
 * exceed four million.
 *)

let rec e2search a b acc =
    if b > 4000000 then acc
    else e2search b (a + b) (if b mod 2 == 0 then acc + b else acc)
    ;;

let euler2 = 
    e2search 1 2 0
    ;;


(*
 * Euler #3:
 * Answer: 6857
 *
 * The prime factors of 13195 are 5, 7, 13 and 29.
 *
 * What is the largest prime factor of the number 600851475143 ?
 *)

let rec largest_factor_of_n_below_n_acc n x = 
    if n mod x == 0 then x
    else largest_factor_of_n_below_n_acc n (x - 1)
    ;;

let largest_factor_of_n_below_n n =
    largest_factor_of_n_below_n_acc n (n - 1)
    ;;

let is_prime n = 
    largest_factor_of_n_below_n n == 1
    ;;

let rec e3search f t =
    if f mod t == 0 && is_prime f then f
    else e3search (f-1) t
    ;;

let euler3 =
    let target = 600851475143
    let max_factor = ceil (sqrt target)
    e3search max_factor target
    ;;