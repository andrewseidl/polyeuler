(* Project Euler in pascal (specifically targeting the GNU pascal compiler) 

To compile:
% gpc euler.pas -o euler

*)

program euler;

    (* Euler #1
       Answer: 233168

       If we list all the natural numbers below 10 that are multiples of 3 or 5,
       we get 3, 5, 6 and 9. The sum of these multiples is 23.

       Find the sum of all the multiples of 3 or 5 below 1000.
    *)
    function euler1 : integer;
    var n : integer;
    var i : integer;
    begin
        n := 0;
        for i := 1 to 999 do
        begin
            if (i mod 3 = 0) or (i mod 5 = 0) then
            begin
                n := n + i;
            end;
        end;
        euler1 := n;
    end;

    (* Euler #2
       Answer: 4613732

       Each new term in the Fibonacci sequence is generated by adding the previous
       two terms. By starting with 1 and 2, the first 10 terms will be:

       1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

       Find the sum of all the even-valued terms in the sequence which do not
       exceed four million.
    *)
    function euler2 : integer;
    var n : integer;
    var a : integer;
    var b : integer;
    var c : integer;
    begin
        n := 2;
        a := 1;
        b := 2;
        while true do
            begin
                c := a + b;
                if c > 4000000 then
                    break;
                if c mod 2 = 0 then
                    n := n + c;
                a := b;
                b := c;
            end;
        euler2 := n
    end;

begin
    writeln(euler1());
    writeln(euler2());
end.
