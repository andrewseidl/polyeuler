/* Project Euler in Javascript
 * (Specifically Rhino JavaScript-C 1.6 2006-11-19)
 * John Evans <john@jpevans.com>
 */


/* Euler #1
 * Answer: 233168
 *
 * If we list all the natural numbers below 10 that are multiples of 3 or 5,
 * we get 3, 5, 6 and 9. The sum of these multiples is 23.
 *
 * Find the sum of all the multiples of 3 or 5 below 1000.
 */
function euler1() {
    var n = 0;
    for (var i=0; i<1000; i++) {
        if ((i % 3 == 0)  || (i % 5 == 0)) {
            n += i;
        }
    }
    return n;
}

/* Euler #2
 * Answer: 4613732
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * Find the sum of all the even-valued terms in the sequence which do not
 * exceed four million.
 */
function euler2() {
    var a = 1, b = 2, n = 2;
    while (true) {
        var c = a + b;
        if (c >= 4000000) {
            break;
        }
        if (c % 2 == 0) {
            n += c;
        }
        a = b;
        b = c;
    }
    return n;
}


EULERS = [euler1, euler2];

if (arguments.length > 0) {
    for (index in arguments) {
        var n = arguments[index]
        print(n + ": " + EULERS[n]());
    }
} else {
    for (var i=0, len = EULERS.length; i<len; i++) {
        print(i + ": " + EULERS[i]());
    }
}